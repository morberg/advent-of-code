#ip 1
;; init block
0 :  seti 123 0 2           ;; reg 2 = 123
1 :  bani 2 456 2           ;; reg 2 = 123 & 456 = 72
2 :  eqri 2 72 2            ;; reg 2 = 1 if reg 2 == 72 else 0
3 :  addr 2 1 1             ;; goto 5 if prev line true, else goto 4
4 :  seti 0 0 1             ;; goto 0 (start program again)
5 :  seti 0 3 2             ;; reg 2 = 0

;; Outermost loop
6 :  bori 2 65536 5         ;; reg 5 = reg 2 | 65536
7 :  seti 4843319 1 2       ;; reg 2 = 4843319

    ;; Outer loop
    8 :  bani 5 255 4           ;; reg 4 = reg 5 & 0xff
    9 :  addr 2 4 2             ;; reg 2 = reg 2 + reg 4
    10:  bani 2 16777215 2      ;; reg 2 = reg 2 & 16777215
    11:  muli 2 65899 2         ;; reg 2 = reg 2 * 65899
    12:  bani 2 16777215 2      ;; reg 2 = reg 2 & 16777215
    13:  gtir 256 5 4           ;; reg 4 = 1 if 256 > reg 5 else 0
    14:  addr 4 1 1             ;; pc = pc + reg 4 (i.e. goto 16 if reg 5 < 256)
    15:  addi 1 1 1             ;; goto 17
    16:  seti 27 4 1            ;; goto 28 - check end condition
    17:  seti 0 7 4             ;; reg 4 = 0

        ;; Inner loop
        18:  addi 4 1 3          ;; reg 3 = reg 4 + 1
        19:  muli 3 256 3        ;; reg 3 = reg 3 * 256
        20:  gtrr 3 5 3          ;; reg 3 = 1 if reg 3 > reg 5 else 0
        21:  addr 3 1 1          ;; reg 1 (pc) = reg 1 + reg 3 =>
                                 ;;              skip next instr if reg 3 > reg 5
        22:  addi 1 1 1          ;; goto 24 (if reg 3 > reg 5)
        23:  seti 25 0 1         ;; goto 26
        24:  addi 4 1 4          ;; reg 4 = reg 4 + 1
        25:  seti 17 0 1         ;; goto 18

    26:  setr 4 1 5         ;; reg 5 = reg 4
    27:  seti 7 3 1         ;; goto 8

28:  eqrr 2 0 4         ;; reg 4 = 1 if reg 2 == reg 0 else 0
                        ;; we want reg 2 == reg 0 first time we get here for part 1
29:  addr 4 1 1         ;; goto 31 (end program) if previous line was true
30:  seti 5 3 1         ;; goto 6
